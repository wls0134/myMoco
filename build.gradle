/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'com.github.johnrengelman.shadow' version "5.2.0"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'commons-net:commons-net:3.6'
    implementation 'com.google.guava:guava:22.0'
    implementation 'io.vertx:vertx-jdbc-client:3.9.1'
    implementation 'io.vertx:vertx-core:3.9.1'
    implementation 'io.vertx:vertx-web:3.9.1'
    implementation 'io.vertx:vertx-web-client:3.9.1'
    implementation 'org.apache.clerezza.ext:org.json.simple:0.4' 
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.1' 

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13' 
}

application {
    // Define the main class for the application. 

    mainClassName = 'io.vertx.core.Launcher'
    
}

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile) {
    //enable compilation in a separate daemon process
    options.fork = true
    options.encoding = 'UTF-8'

}


jar {
    finalizedBy shadowJar
    dependsOn configurations.runtime
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'io.vertx.starter.MainVerticle' 
    }
}

tasks{
    println "task?"
    task getByName(type: JavaExec) {
        dependsOn jar
        println "getbyname?"
        classpath = sourceSets.main.runtimeClasspath
        main="-jar"
        args = ["run", "io.vertx.starter.MainVerticle" ,"--redeploy=src/**/*", "--launcher-class=${application.mainClassName}", "--on-redeploy=./gradlew classes"]
    }

}
